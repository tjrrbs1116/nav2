#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.7.1 on Thu Dec 20 11:31:50 2018
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyFrame.__init__
		kwds["style"] = wx.DEFAULT_FRAME_STYLE
		wx.Frame.__init__(self, *args, **kwds)
		self.notebook_1 = wx.Notebook(self, wx.ID_ANY)

		self.tab_map = wx.Panel(self.notebook_1, wx.ID_ANY)
		self.button_teleoperation = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Teleoperation"))
		self.button_W = wx.Button(self.tab_map, wx.ID_ANY, _("W"))
		self.button_A = wx.Button(self.tab_map, wx.ID_ANY, _("A"))
		self.button_S = wx.Button(self.tab_map, wx.ID_ANY, _("S"))
		self.button_D = wx.Button(self.tab_map, wx.ID_ANY, _("D"))
		self.button_X = wx.Button(self.tab_map, wx.ID_ANY, _("X"))

		self.button_SLAM = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("SLAM"))
		self.panel_save_map = wx.Panel(self.tab_map, wx.ID_ANY)
		self.button_save_map = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Save Map"))
		self.panel_navigation = wx.Panel(self.tab_map, wx.ID_ANY)
		self.button_navigation = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Navigation"))
#		self.button_camera_connect = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Camera Connect"))
#		self.button_camera_show = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Camera Show"))
		self.button_patrol_setting = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Patrol Start"))
		self.button_rth = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Return to Home"))
		self.button_patrol = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Patrol Restart"))			
		self.label_mobile_robot = wx.TextCtrl(self.tab_map, wx.ID_ANY, "", style=wx.VSCROLL | wx.TE_MULTILINE | wx.TE_READONLY)
		self.button_message_on = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Message ON"))
		self.button_message_off = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Message OFF"))

#		self.remote_ip =wx.StaticText(self.tab_map, wx.ID_ANY, _("  Remote IP :"))
#		self.label_remote_ip = wx.TextCtrl(self.tab_map, wx.ID_ANY, "",size=(-1, 30))
#		self.robot_ip =wx.StaticText(self.tab_map, wx.ID_ANY, _("  Robot IP :"))
#		self.label_robot_ip = wx.TextCtrl(self.tab_map, wx.ID_ANY, "",size=(-1, 30))
#		self.robot_id =wx.StaticText(self.tab_map, wx.ID_ANY, _("          ID :"))
#		self.label_robot_id = wx.TextCtrl(self.tab_map, wx.ID_ANY, "",size=(-1, 30))
#		self.robot_password =wx.StaticText(self.tab_map, wx.ID_ANY, _("  Password :"))
#		self.label_robot_password = wx.TextCtrl(self.tab_map, wx.ID_ANY, "", size=(-1, 30))
		self.button_robot_connect = wx.ToggleButton(self.tab_map, wx.ID_ANY, _("Robot Connect"))

		self.bitmap_logo = wx.StaticBitmap(self, wx.ID_ANY, wx.NullBitmap)
		#########################################################################################################################

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnTeleoperation, self.button_teleoperation)
		self.button_SLAM.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_save_map.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_navigation.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
#		self.button_camera_connect.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
#		self.button_camera_show.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_rth.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_patrol.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_patrol_setting.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)

		self.button_teleoperation.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_W.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_A.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_S.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_D.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_X.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.label_mobile_robot.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_message_on.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_message_off.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)


		self.button_SLAM.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
		self.button_save_map.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
		self.button_navigation.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
#		self.button_camera_connect.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
#		self.button_camera_show.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
		self.button_rth.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)
		self.button_patrol.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)	
		self.button_patrol_setting.Bind(wx.EVT_KEY_DOWN, self.OnTeleoperationKeyboard)

		self.button_teleoperation.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
		self.button_W.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
		self.button_A.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
		self.button_S.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
		self.button_D.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
		self.button_X.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
		self.label_mobile_robot.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
		self.button_message_on.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)
		self.button_message_off.Bind(wx.EVT_KEY_UP, self.OnTeleoperationKeyboardRelease)

		self.Bind(wx.EVT_BUTTON, self.OnTeleoperation, self.button_W)
		self.Bind(wx.EVT_BUTTON, self.OnTeleoperation, self.button_A)
		self.Bind(wx.EVT_BUTTON, self.OnTeleoperation, self.button_S)
		self.Bind(wx.EVT_BUTTON, self.OnTeleoperation, self.button_D)
		self.Bind(wx.EVT_BUTTON, self.OnTeleoperation, self.button_X)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnSlam, self.button_SLAM)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnSaveMap, self.button_save_map)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnNavigation, self.button_navigation)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnMessage, self.button_message_on)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnMessage, self.button_message_off)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnConnect, self.button_robot_connect)
#		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnCameraConnect, self.button_camera_connect)
#		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnCameraShow, self.button_camera_show)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnRTH, self.button_rth)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnPatrol, self.button_patrol)
		self.Bind(wx.EVT_TOGGLEBUTTON, self.OnPatrolSetting, self.button_patrol_setting)   

		self.button_save_map.Disable()
		self.button_W.Disable()
		self.button_A.Disable()
		self.button_S.Disable()
		self.button_D.Disable()
		self.button_X.Disable()

		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyFrame.__set_properties
		self.SetTitle(_("PIOT User Interface"))
		self.SetSize((1200, 800))
		self.SetPosition((700,150))

		self.button_teleoperation.SetMinSize((125,29))
		self.button_SLAM.SetMinSize((125,29))
		self.button_save_map.SetMinSize((125,29))
		self.panel_navigation.SetMinSize((125,29))
		self.panel_navigation.SetMinSize((125,29))
		self.button_navigation.SetMinSize((125,29))

		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyFrame.__do_layout
		self.sizer_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_29 = wx.BoxSizer(wx.HORIZONTAL)

		sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_5 = wx.BoxSizer(wx.VERTICAL)
		sizer_6 = wx.BoxSizer(wx.VERTICAL)
		sizer_7 = wx.BoxSizer(wx.VERTICAL)
		sizer_8 = wx.BoxSizer(wx.VERTICAL)
		sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_10 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_12 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_4.Add(sizer_5, 4, wx.EXPAND, 0)
		sizer_4.Add(sizer_6, 4, wx.EXPAND, 0)
#		sizer_5.Add((20, 20), 2, 0, 0)
#		sizer_5.Add(sizer_11, 2, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
#		sizer_5.Add(sizer_12, 2, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
#		sizer_11.Add(self.remote_ip, 1, wx.ALIGN_CENTER, 0)
#		sizer_11.Add(self.label_remote_ip, 1, wx.ALIGN_CENTER, 0)
#		sizer_11.Add(self.robot_ip, 1, wx.ALIGN_CENTER, 0)
#		sizer_11.Add(self.label_robot_ip, 1, wx.ALIGN_CENTER, 0)
#		sizer_11.Add((20, 20), 1, 0, 0)
#		sizer_12.Add(self.robot_id, 1, wx.ALIGN_CENTER, 0)
#		sizer_12.Add(self.label_robot_id, 1, wx.ALIGN_CENTER, 0)
#		sizer_12.Add(self.robot_password, 1, wx.ALIGN_CENTER, 0)
#		sizer_12.Add(self.label_robot_password, 1, wx.ALIGN_CENTER, 0)
#		sizer_12.Add(self.button_robot_connect, 1, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_5.Add(self.button_robot_connect, 2, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_5.Add((20, 20), 3, 0, 0)
		sizer_5.Add(self.button_SLAM, 2, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_5.Add((20, 20), 3, 0, 0)
		sizer_5.Add(sizer_7, 3, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_7.Add(self.panel_save_map, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_7.Add(self.button_save_map, 2, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_5.Add((20, 20), 3, 0, 0)
		sizer_5.Add(sizer_8, 3, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
#		sizer_5.Add((20, 20), 3, 0, 0)
		sizer_8.Add(self.panel_navigation, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_8.Add(self.button_navigation, 2, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
#		sizer_13.Add(self.button_camera_connect, 1, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
#		sizer_13.Add(self.button_camera_show, 1, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_5.Add((20, 20), 3, 0, 0)
		sizer_5.Add(self.button_patrol_setting, 2, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)   
		sizer_5.Add(sizer_13, 2, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_13.Add(self.button_rth, 1, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)   
		sizer_13.Add(self.button_patrol, 1, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)       
#		sizer_5.Add((20, 20), 3, 0, 0)

		sizer_6.Add(self.button_teleoperation, 1, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_6.Add((20, 20), 1, 0, 0)
		sizer_6.Add(self.button_W, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
		sizer_9.Add(self.button_A, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_9.Add(self.button_S, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_9.Add(self.button_D, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_6.Add(sizer_9, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
		sizer_6.Add(self.button_X, 1, wx.ALIGN_CENTER_HORIZONTAL, 0)
		sizer_6.Add((20, 20), 1, 0, 0)
		sizer_6.Add(self.label_mobile_robot, 6, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_6.Add(sizer_10, 1, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0)
		sizer_10.Add(self.button_message_on,1, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0 )
		sizer_10.Add(self.button_message_off,1, wx.ALIGN_CENTER_HORIZONTAL | wx.ALL | wx.EXPAND, 0 )

		self.tab_map.SetSizer(sizer_4)

		#큰 메뉴 , 페이지
		self.notebook_1.AddPage(self.tab_map, _("Contorl"))
		self.sizer_1.Add(self.notebook_1, 1, wx.EXPAND, 0)
		sizer_29.Add((0, 50), 0, wx.EXPAND, 0)
		self.sizer_1.Add(sizer_29, 0, wx.EXPAND, 0)
		self.sizer_1.Add(self.bitmap_logo, 0, 0, 0)
		self.SetSizer(self.sizer_1)
		self.Layout()
		# end wxGlade

	def OnLaunchKill(self, event):  # wxGlade: MyFrame.<event_handler>
		print ("Event handler 'OnLaunchKill' not implemented!")
		event.Skip()

	def OnSaveMap(self, event):  # wxGlade: MyFrame.<event_handler>
		print ("Event handler 'OnSaveMap' not implemented!")
		event.Skip()

	def OnSlam(self, event):  # wxGlade: MyFrame.<event_handler>
		print ("Event handler 'OnSlam' not implemented!")
		event.Skip()

	def OnNavigation(self, event):  # wxGlade: MyFrame.<event_handler>
		print ("Event handler 'OnNavigation' not implemented!")
		event.Skip()

	def OnTeleoperation(self, event):  # wxGlade: MyFrame.<event_handler>
		print ("Event handler 'OnTeleoperation' not implemented!")
		event.Skip()

	def OnTeleoperationKeyboard(self, event):
		if self.button_teleoperation.GetValue() == True:
			key = event.GetKeyCode()
			if  key == 87:
				evt = wx.PyCommandEvent(wx.EVT_BUTTON.typeId,self.button_W.GetId())
				evt.SetEventObject(self.button_W)
				wx.PostEvent(self,evt)
				self.button_W.SetForegroundColour('#F9F9F8')
				self.button_W.SetBackgroundColour('#8B8BB9')
			elif key == 65:
				evt = wx.PyCommandEvent(wx.EVT_BUTTON.typeId,self.button_A.GetId())
				evt.SetEventObject(self.button_A)
				wx.PostEvent(self,evt)
				self.button_A.SetForegroundColour('#F9F9F8')
				self.button_A.SetBackgroundColour('#8B8BB9')
			elif key == 83:
				evt = wx.PyCommandEvent(wx.EVT_BUTTON.typeId,self.button_S.GetId())
				evt.SetEventObject(self.button_S)
				wx.PostEvent(self,evt)
				self.button_S.SetForegroundColour('#F9F9F8')
				self.button_S.SetBackgroundColour('#8B8BB9')
			elif key == 68:
				evt = wx.PyCommandEvent(wx.EVT_BUTTON.typeId,self.button_D.GetId())
				evt.SetEventObject(self.button_D)
				wx.PostEvent(self,evt)
				self.button_D.SetForegroundColour('#F9F9F8')
				self.button_D.SetBackgroundColour('#8B8BB9')
			elif key == 88:
				evt = wx.PyCommandEvent(wx.EVT_BUTTON.typeId,self.button_X.GetId())
				evt.SetEventObject(self.button_X)
				wx.PostEvent(self,evt)
				self.button_X.SetForegroundColour('#F9F9F8')
				self.button_X.SetBackgroundColour('#8B8BB9')
		event.Skip()

	def OnTeleoperationKeyboardRelease(self, event):
		self.button_W.SetForegroundColour(wx.NullColour)
		self.button_W.SetBackgroundColour(wx.NullColour)
		self.button_A.SetForegroundColour(wx.NullColour)
		self.button_A.SetBackgroundColour(wx.NullColour)
		self.button_S.SetForegroundColour(wx.NullColour)
		self.button_S.SetBackgroundColour(wx.NullColour)
		self.button_D.SetForegroundColour(wx.NullColour)
		self.button_D.SetBackgroundColour(wx.NullColour)
		self.button_X.SetForegroundColour(wx.NullColour)
		self.button_X.SetBackgroundColour(wx.NullColour)
		event.Skip()

	def OnConnect(self, event):  # wxGlade: MyFrame.<event_handler>
		print ("Event handler 'OnConnect' not implemented!")
		event.Skip()

# end of class MyFrame

class MyDialog(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: MyDialog.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.panel_2 = wx.ScrolledWindow(self, wx.ID_ANY, style=wx.TAB_TRAVERSAL)
		self.radio_box = wx.RadioBox(self.panel_2, wx.ID_ANY, "", choices=[_("0"), _("1"), _("2"), _("3")], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
		self.button_1 = wx.Button(self, wx.ID_ANY, _("OK"))
		self.button_1_copy = wx.Button(self, wx.ID_ANY, _("Cancel"))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self.OnOk, self.button_1)
		self.Bind(wx.EVT_BUTTON, self.OnCancel, self.button_1_copy)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: MyDialog.__set_properties
		self.SetTitle(_("dialog_1"))
		self.SetSize((258, 212))
		self.radio_box.SetSelection(0)
		self.panel_2.SetScrollRate(10, 10)
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: MyDialog.__do_layout
		sizer_13 = wx.BoxSizer(wx.VERTICAL)
		sizer_15 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_14.Add(self.radio_box, 1, wx.ALIGN_CENTER_HORIZONTAL | wx.LEFT | wx.RIGHT | wx.TOP, 4)
		self.panel_2.SetSizer(sizer_14)
		sizer_13.Add(self.panel_2, 1, wx.EXPAND, 0)
		sizer_15.Add(self.button_1, 0, wx.ALL, 4)
		sizer_15.Add(self.button_1_copy, 0, wx.ALL, 4)
		sizer_13.Add(sizer_15, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
		self.SetSizer(sizer_13)
		self.Layout()
		# end wxGlade

	def OnOk(self, event):  # wxGlade: MyDialog.<event_handler>
		print ("Event handler 'OnOk' not implemented!")
		event.Skip()

	def OnCancel(self, event):  # wxGlade: MyDialog.<event_handler>
		print ("Event handler 'OnCancel' not implemented!")
		event.Skip()

# end of class MyDialog
